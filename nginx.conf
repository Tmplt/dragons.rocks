worker_processes  1;

events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    keepalive_timeout  65;
    include mime.types;
    gzip  on;

    # SSL and TLS stuff
    ssl_certificate /etc/letsencrypt/live/bad.dragons.rocks/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bad.dragons.rocks/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_dhparam /etc/nginx/dhparams.pem;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ssl_stapling on;
    ssl_stapling_verify on;

    server {
        listen 443 ssl;
        server_name dragons.rocks;

        ssl_certificate /etc/letsencrypt/live/bad.dragons.rocks/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bad.dragons.rocks/privkey.pem;

        location / {
            root   /srv/dragons.rocks;
            index  index.html index.htm;
        }

        location ~ /\.git {
            deny all;
        }

        error_page   500 502 503 504  /50x.html;
            location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }

    server {
        listen 443 ssl;
        server_name git.dragons.rocks;

        ssl_certificate /etc/letsencrypt/live/bad.dragons.rocks/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bad.dragons.rocks/privkey.pem;

        root /usr/share/webapps/cgit;
        try_files $uri @cgit;

        location @cgit {
            include             fastcgi_params;
            fastcgi_param       SCRIPT_FILENAME $document_root/cgit.cgi;
            fastcgi_param       PATH_INFO       $uri;
            fastcgi_param       QUERY_STRING    $args;
            fastcgi_param       HTTP_HOST       $server_name;
            fastcgi_pass        unix:/run/fcgiwrap.sock;
        }

        location /Tmplt/libircppclient {
            return 301 https://git.dragons.rocks/libircppclient/about/;
        }

        location /Tmplt/libircppclient/src/41c20cdd0e8c3e0bc8b67be122eff7c30cbfcea4 {
            return 301 https://git.dragons.rocks/libircppclient/tree/?h=v0.1.0&id=41c20cdd0e8c3e0bc8b67be122eff7c30cbfcea4;
        }
    }

    server {
        listen 443 ssl;
        server_name bad.dragons.rocks;

        ssl_certificate /etc/letsencrypt/live/bad.dragons.rocks/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/bad.dragons.rocks/privkey.pem;

        client_max_body_size 250M;

        # self-hosted pbpt.pw
        location / {
            proxy_pass http://[::]:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
        }
    }

    server {
        listen 80;
        server_name git.dragons.rocks;
        return 301 https://git.dragons.rocks$request_uri;
    }

    server {
        listen 80;
        server_name bad.dragons.rocks;
        return 301 https://bad.dragons.rocks$request_uri;
    }


    server {
        listen 80;
        server_name dragons.rocks;
        return 301 https://dragons.rocks$request_uri;
    }
}
